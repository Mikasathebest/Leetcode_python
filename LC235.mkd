235. Lowest Common Ancestor of a Binary Search Tree

题目：找到二叉搜索树的最近公共节点

思路：由于是二叉搜索树，左子树一定小于root.val， 右子树一定大于root.val；  
所以可以根据val的大小，判断p、q位置。 e.g p、q的值都比 root的值 小，说明在左子树，那么进入左子树递归；

```python
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if p.val < root.val and q.val < root.val:
            return self.lowestCommonAncestor(root.left, p, q)
        if p.val > root.val and q.val > root.val:
            return self.lowestCommonAncestor(root.right, p, q)
        
        return root
```
